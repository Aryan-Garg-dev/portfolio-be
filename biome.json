{
	"$schema": "https://biomejs.dev/schemas/2.1.3/schema.json",
	"vcs": {
		"enabled": false,
		"clientKind": "git",
		"useIgnoreFile": false
	},
	"files": {
		"ignoreUnknown": false
	},
	"formatter": {
		"enabled": true,
		"indentStyle": "tab",
		"lineEnding": "lf",
		"indentWidth": 2,
		"bracketSpacing": true,
		"expand": "auto",
		"attributePosition": "auto",
		"lineWidth": 120,
		"formatWithErrors": true
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": true,
			"complexity": {
				"recommended": true,
				"noUselessTernary": "warn",
				"noBannedTypes": "off"
			},
			"performance": {
				"noBarrelFile": "error",
				"noReExportAll": "error"
			},
			"correctness": {
				"noUnusedImports": "warn",
				"noUndeclaredVariables": "error",
				"noUnusedVariables": "warn",
				"noUnreachable": "error",
				"noUnusedFunctionParameters": "off"
			},
			"suspicious": {
				"noDoubleEquals": "error",
				"noExplicitAny": "off",
				"noConsole": {
					"level": "error",
					"options": {
						"allow": [
							"warn",
							"error",
							"debug",
							"trace",
							"table",
							"assert",
							"group",
							"groupEnd",
							"time",
							"timeLog",
							"timeEnd"
						]
					}
				}
			},
			"style": {
				"useConst": "warn",
				"useImportType": "info",
				"useExportType": "info",
				"useFilenamingConvention": {
					"level": "warn",
					"options": {
						"filenameCases": ["kebab-case"]
					}
				},
				"useNamingConvention": {
					"level": "info",
					"options": {
						"strictCase": false,
						"conventions": [
							{
								"selector": {
									"kind": "typeParameter"
								},
								"match": "[TK]|T[a-zA-Z0-9]+",
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "typeAlias"
								},
								"match": "T[a-zA-Z0-9]*|[A-Z][a-zA-Z0-9]{2,20}*Props",
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "variable"
								},
								"match": ".{1,30}",
								"formats": []
							},
							{
								"selector": {
									"kind": "objectLiteralProperty"
								},
								"match": ".{1,30}",
								"formats": []
							},
							{
								"selector": {
									"kind": "function"
								},
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "class"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "classMember",
									"modifiers": ["private"]
								},
								"match": "_(.+)",
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "classProperty",
									"modifiers": ["static", "readonly"]
								},
								"formats": ["CONSTANT_CASE"]
							},
							{
								"selector": {
									"kind": "interface"
								},
								"formats": ["PascalCase"],
								"match": "I[A-Z][a-zA-Z0-9]*|([A-Z][a-zA-Z0-9]*?)Error|[A-Z][a-zA-Z0-9]{2,20}*Props"
							},
							{
								"selector": {
									"kind": "const",
									"scope": "global"
								},
								"match": "__(.+)__|_(.+)_|(.+)",
								"formats": ["CONSTANT_CASE"]
							}
						]
					}
				}
			}
		}
	},
	"javascript": {
		"formatter": {
			"arrowParentheses": "asNeeded",
			"bracketSpacing": true,
			"jsxQuoteStyle": "double",
			"quoteStyle": "double",
			"semicolons": "always",
			"trailingCommas": "es5"
		},
		"globals": ["_", "$"]
	},
	"json": {
		"formatter": {
			"trailingCommas": "none"
		}
	},
	"assist": {
		"enabled": true,
		"actions": {
			"source": {
				"organizeImports": "off"
			}
		}
	}
}
